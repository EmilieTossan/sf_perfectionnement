{% extends "front/base.html.twig" %}

{% block title %}Articles{% endblock %}

{% block main %}

    {% for article in articles %}

        {% if article.published %}

            <h2><a href="{{ path("show_article", {'id' : article.id})}}">{{ article.title }}</a></h2>
            
            <a href="{{ path("article_like"), {'id' : article.id} }}" class="btn btn-link js-likes">

                {% if app.user and article.isLikedByUser(app.user) %}
                
                    <i class="fas fa-thumbs-up"></i>

                {% else %}

                    <i class="far fa-thumbs-up"></i>

                {% endif %}

                    <span class="js-likes">{{ articles.likes | length }}</span>
                    <span class="js-label">J'aime</span>

            </a>

        {% endif %}

    {% endfor %}

{% endblock %}

{% block js %}

<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>

<script>

    function onClickLike(event){
        console.log
        event.preventDefault();
        const url = $this.href;
        const spanCount = this.querySelector('span.js-likes');
        const icone = this.querySelector('i');
        axios.get(url).then(function (response){
            spanCount.textContent = response.data.likes;
            if (icone.classList.contains('fas')) {
                icone.classList.replace('fas', 'far')                
            } else {
                icone.classList.replace('far', 'fas')
            }
        }).catch(function(error){
            if (error.response.status === 403) {
                window.alert("Vous devez vous connecter.")
            } else {
                window.alert("Une erreur s'est produite.")
            }
        })
    }

    document.querySelectorAll('a.js-likes').forEach(function (link){
        link.addEventListener('click', onClickLike);
    })
    
</script>

{% endblock %}